// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

export class NowCall {
	func: wasmlib.ScFunc;
	public constructor(ctx: wasmlib.ScFuncCallContext) {
		this.func = new wasmlib.ScFunc(ctx, sc.HScName, sc.HFuncNow);
	}
}

export class NowContext {
}

export class GetTimestampCall {
	func: wasmlib.ScView;
	results: sc.ImmutableGetTimestampResults = new sc.ImmutableGetTimestampResults(wasmlib.ScView.nilProxy);
	public constructor(ctx: wasmlib.ScViewCallContext) {
		this.func = new wasmlib.ScView(ctx, sc.HScName, sc.HViewGetTimestamp);
	}
}

export class GetTimestampContext {
	results: sc.MutableGetTimestampResults = new sc.MutableGetTimestampResults(wasmlib.ScView.nilProxy);
}

export class ScFuncs {
	static now(ctx: wasmlib.ScFuncCallContext): NowCall {
		return new NowCall(ctx);
	}

	static getTimestamp(ctx: wasmlib.ScViewCallContext): GetTimestampCall {
		const f = new GetTimestampCall(ctx);
		f.results = new sc.ImmutableGetTimestampResults(wasmlib.newCallResultsProxy(f.func));
		return f;
	}
}

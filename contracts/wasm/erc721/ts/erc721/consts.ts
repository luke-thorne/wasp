// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmtypes from "wasmlib/wasmtypes";

export const ScName        = "erc721";
export const ScDescription = "ERC-721 NFT PoC for IOTA Smart Contracts";
export const HScName       = new wasmtypes.ScHname(0xd967c216);

export const ParamApproval = "approval";
export const ParamApproved = "approved";
export const ParamData     = "data";
export const ParamFrom     = "from";
export const ParamName     = "n";
export const ParamOperator = "operator";
export const ParamOwner    = "owner";
export const ParamSymbol   = "s";
export const ParamTo       = "to";
export const ParamTokenID  = "tokenID";
export const ParamTokenURI = "tokenURI";

export const ResultAmount   = "amount";
export const ResultApproval = "approval";
export const ResultApproved = "approved";
export const ResultName     = "name";
export const ResultOwner    = "owner";
export const ResultSymbol   = "symbol";
export const ResultTokenURI = "tokenURI";

export const StateApprovedAccounts  = "approvedAccounts";
export const StateApprovedOperators = "approvedOperators";
export const StateBalances          = "balances";
export const StateName              = "name";
export const StateOwners            = "owners";
export const StateSymbol            = "symbol";
export const StateTokenURIs         = "tokenURIs";

export const FuncApprove           = "approve";
export const FuncBurn              = "burn";
export const FuncInit              = "init";
export const FuncMint              = "mint";
export const FuncSafeTransferFrom  = "safeTransferFrom";
export const FuncSetApprovalForAll = "setApprovalForAll";
export const FuncTransferFrom      = "transferFrom";
export const ViewBalanceOf         = "balanceOf";
export const ViewGetApproved       = "getApproved";
export const ViewIsApprovedForAll  = "isApprovedForAll";
export const ViewName              = "name";
export const ViewOwnerOf           = "ownerOf";
export const ViewSymbol            = "symbol";
export const ViewTokenURI          = "tokenURI";

export const HFuncApprove           = new wasmtypes.ScHname(0xa0661268);
export const HFuncBurn              = new wasmtypes.ScHname(0x7bc1efb1);
export const HFuncInit              = new wasmtypes.ScHname(0x1f44d644);
export const HFuncMint              = new wasmtypes.ScHname(0xa29addcf);
export const HFuncSafeTransferFrom  = new wasmtypes.ScHname(0x130ce158);
export const HFuncSetApprovalForAll = new wasmtypes.ScHname(0xb8d8c776);
export const HFuncTransferFrom      = new wasmtypes.ScHname(0xd5e0a602);
export const HViewBalanceOf         = new wasmtypes.ScHname(0x67ef8df4);
export const HViewGetApproved       = new wasmtypes.ScHname(0xbe34b6ba);
export const HViewIsApprovedForAll  = new wasmtypes.ScHname(0x3251b0f0);
export const HViewName              = new wasmtypes.ScHname(0x0df7da3a);
export const HViewOwnerOf           = new wasmtypes.ScHname(0x1246f5ad);
export const HViewSymbol            = new wasmtypes.ScHname(0x3e93d19b);
export const HViewTokenURI          = new wasmtypes.ScHname(0x4e1a7397);

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package testcore

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableCallOnChainResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableCallOnChainResults) N() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultN))
}

type MutableCallOnChainResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableCallOnChainResults) N() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultN))
}

type ImmutableRunRecursionResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableRunRecursionResults) N() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultN))
}

type MutableRunRecursionResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableRunRecursionResults) N() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultN))
}

type ImmutableTestChainOwnerIDFullResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTestChainOwnerIDFullResults) ChainOwnerID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultChainOwnerID))
}

type MutableTestChainOwnerIDFullResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableTestChainOwnerIDFullResults) ChainOwnerID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultChainOwnerID))
}

type ImmutableFibonacciResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFibonacciResults) N() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultN))
}

type MutableFibonacciResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableFibonacciResults) N() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultN))
}

type ImmutableFibonacciIndirectResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFibonacciIndirectResults) N() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultN))
}

type MutableFibonacciIndirectResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableFibonacciIndirectResults) N() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultN))
}

type ImmutableGetCounterResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetCounterResults) Counter() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultCounter))
}

type MutableGetCounterResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetCounterResults) Counter() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultCounter))
}

type MapStringToImmutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToImmutableInt64) GetInt64(key string) wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(m.proxy.Key(wasmtypes.StringToBytes(key)))
}

type ImmutableGetIntResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetIntResults) Values() MapStringToImmutableInt64 {
	return MapStringToImmutableInt64{proxy: s.proxy}
}

type MapStringToMutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToMutableInt64) Clear() {
	m.proxy.ClearMap()
}

func (m MapStringToMutableInt64) GetInt64(key string) wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(m.proxy.Key(wasmtypes.StringToBytes(key)))
}

type MutableGetIntResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetIntResults) Values() MapStringToMutableInt64 {
	return MapStringToMutableInt64{proxy: s.proxy}
}

type MapStringToImmutableString struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToImmutableString) GetString(key string) wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(m.proxy.Key(wasmtypes.StringToBytes(key)))
}

type ImmutableGetStringValueResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetStringValueResults) Vars() MapStringToImmutableString {
	return MapStringToImmutableString{proxy: s.proxy}
}

type MapStringToMutableString struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToMutableString) Clear() {
	m.proxy.ClearMap()
}

func (m MapStringToMutableString) GetString(key string) wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(m.proxy.Key(wasmtypes.StringToBytes(key)))
}

type MutableGetStringValueResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetStringValueResults) Vars() MapStringToMutableString {
	return MapStringToMutableString{proxy: s.proxy}
}

type ImmutableTestChainOwnerIDViewResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTestChainOwnerIDViewResults) ChainOwnerID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultChainOwnerID))
}

type MutableTestChainOwnerIDViewResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableTestChainOwnerIDViewResults) ChainOwnerID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultChainOwnerID))
}

type ImmutableTestSandboxCallResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTestSandboxCallResults) SandboxCall() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultSandboxCall))
}

type MutableTestSandboxCallResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableTestSandboxCallResults) SandboxCall() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultSandboxCall))
}

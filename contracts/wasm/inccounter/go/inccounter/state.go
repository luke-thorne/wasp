// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package inccounter

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableIncCounterState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableIncCounterState) Counter() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(StateCounter))
}

func (s ImmutableIncCounterState) NumRepeats() wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(s.proxy.Root(StateNumRepeats))
}

type MutableIncCounterState struct {
	proxy wasmtypes.Proxy
}

func (s MutableIncCounterState) AsImmutable() ImmutableIncCounterState {
	return ImmutableIncCounterState(s)
}

func (s MutableIncCounterState) Counter() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(StateCounter))
}

func (s MutableIncCounterState) NumRepeats() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(s.proxy.Root(StateNumRepeats))
}

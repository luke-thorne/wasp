// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:revive
package donatewithfeedback

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableDonateParams struct {
	proxy wasmtypes.Proxy
}

// feedback for the person you donate to
func (s ImmutableDonateParams) Feedback() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamFeedback))
}

type MutableDonateParams struct {
	proxy wasmtypes.Proxy
}

// feedback for the person you donate to
func (s MutableDonateParams) Feedback() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamFeedback))
}

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutableWithdrawParams struct {
	proxy wasmtypes.Proxy
}

// amount to withdraw
func (s ImmutableWithdrawParams) Amount() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ParamAmount))
}

type MutableWithdrawParams struct {
	proxy wasmtypes.Proxy
}

// amount to withdraw
func (s MutableWithdrawParams) Amount() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ParamAmount))
}

type ImmutableDonationParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableDonationParams) Nr() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ParamNr))
}

type MutableDonationParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableDonationParams) Nr() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ParamNr))
}

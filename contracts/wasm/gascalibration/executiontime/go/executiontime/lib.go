// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:dupl
package executiontime

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"

var exportMap = wasmlib.ScExportMap{
	Names: []string{
		FuncF,
	},
	Funcs: []wasmlib.ScFuncContextFunction{
		funcFThunk,
	},
	Views: []wasmlib.ScViewContextFunction{},
}

func OnLoad(index int32) {
	if index >= 0 {
		wasmlib.ScExportsCall(index, &exportMap)
		return
	}

	wasmlib.ScExportsExport(&exportMap)
}

type FContext struct {
	Params  ImmutableFParams
	Results MutableFResults
	State   MutableexecutiontimeState
}

func funcFThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("executiontime.funcF")
	results := wasmlib.NewScDict()
	f := &FContext{
		Params: ImmutableFParams{
			proxy: wasmlib.NewParamsProxy(),
		},
		Results: MutableFResults{
			proxy: results.AsProxy(),
		},
		State: MutableexecutiontimeState{
			proxy: wasmlib.NewStateProxy(),
		},
	}
	ctx.Require(f.Params.N().Exists(), "missing mandatory n")
	funcF(ctx, f)
	ctx.Results(results)
	ctx.Log("executiontime.funcF ok")
}

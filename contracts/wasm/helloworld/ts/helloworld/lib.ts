// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as sc from "./index";

const exportMap: wasmlib.ScExportMap = {
	names: [
		sc.FuncHelloWorld,
		sc.ViewGetHelloWorld,
	],
	funcs: [
		funcHelloWorldThunk,
	],
	views: [
		viewGetHelloWorldThunk,
	],
};

export function on_call(index: i32): void {
	wasmlib.WasmVMHost.connect();
	wasmlib.ScExports.call(index, exportMap);
}

export function on_load(): void {
	wasmlib.WasmVMHost.connect();
	wasmlib.ScExports.export(exportMap);
}

function funcHelloWorldThunk(ctx: wasmlib.ScFuncContext): void {
	ctx.log("helloworld.funcHelloWorld");
	let f = new sc.HelloWorldContext();
	sc.funcHelloWorld(ctx, f);
	ctx.log("helloworld.funcHelloWorld ok");
}

function viewGetHelloWorldThunk(ctx: wasmlib.ScViewContext): void {
	ctx.log("helloworld.viewGetHelloWorld");
	let f = new sc.GetHelloWorldContext();
	const results = new wasmlib.ScDict([]);
	f.results = new sc.MutableGetHelloWorldResults(results.asProxy());
	sc.viewGetHelloWorld(ctx, f);
	ctx.results(results);
	ctx.log("helloworld.viewGetHelloWorld ok");
}

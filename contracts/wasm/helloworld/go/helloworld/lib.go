// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package helloworld

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"

var exportMap = wasmlib.ScExportMap{
	Names: []string{
		FuncHelloWorld,
		ViewGetHelloWorld,
	},
	Funcs: []wasmlib.ScFuncContextFunction{
		funcHelloWorldThunk,
	},
	Views: []wasmlib.ScViewContextFunction{
		viewGetHelloWorldThunk,
	},
}

func OnLoad(index int32) {
	if index >= 0 {
		wasmlib.ScExportsCall(index, &exportMap)
		return
	}

	wasmlib.ScExportsExport(&exportMap)
}

type HelloWorldContext struct{}

func funcHelloWorldThunk(ctx wasmlib.ScFuncContext) {
	ctx.Log("helloworld.funcHelloWorld")
	f := &HelloWorldContext{}
	funcHelloWorld(ctx, f)
	ctx.Log("helloworld.funcHelloWorld ok")
}

type GetHelloWorldContext struct {
	Results MutableGetHelloWorldResults
}

func viewGetHelloWorldThunk(ctx wasmlib.ScViewContext) {
	ctx.Log("helloworld.viewGetHelloWorld")
	results := wasmlib.NewScDict()
	f := &GetHelloWorldContext{
		Results: MutableGetHelloWorldResults{
			proxy: results.AsProxy(),
		},
	}
	viewGetHelloWorld(ctx, f)
	ctx.Results(results)
	ctx.Log("helloworld.viewGetHelloWorld ok")
}

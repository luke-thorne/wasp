// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]

use wasmlib::*;

pub const SC_NAME        : &str = "testwasmlib";
pub const SC_DESCRIPTION : &str = "Exercise several aspects of WasmLib";
pub const HSC_NAME       : ScHname = ScHname(0x89703a45);

pub const PARAM_ADDRESS           : &str = "address";
pub const PARAM_ADDRESS_BYTES     : &str = "addressBytes";
pub const PARAM_ADDRESS_STRING    : &str = "addressString";
pub const PARAM_AGENT_BYTES       : &str = "agentBytes";
pub const PARAM_AGENT_ID          : &str = "agentID";
pub const PARAM_AGENT_STRING      : &str = "agentString";
pub const PARAM_BIG_INT           : &str = "bigInt";
pub const PARAM_BIG_INT_BYTES     : &str = "bigIntBytes";
pub const PARAM_BIG_INT_STRING    : &str = "bigIntString";
pub const PARAM_BLOCK_INDEX       : &str = "blockIndex";
pub const PARAM_BOOL              : &str = "bool";
pub const PARAM_BYTES             : &str = "bytes";
pub const PARAM_CHAIN_ID          : &str = "chainID";
pub const PARAM_ETH_ADDRESS       : &str = "ethAddress";
pub const PARAM_HASH              : &str = "hash";
pub const PARAM_HASH_BYTES        : &str = "hashBytes";
pub const PARAM_HASH_STRING       : &str = "hashString";
pub const PARAM_HNAME             : &str = "hname";
pub const PARAM_HNAME_BYTES       : &str = "hnameBytes";
pub const PARAM_HNAME_STRING      : &str = "hnameString";
pub const PARAM_INDEX             : &str = "index";
pub const PARAM_INDEX0            : &str = "index0";
pub const PARAM_INDEX1            : &str = "index1";
pub const PARAM_INT16             : &str = "int16";
pub const PARAM_INT32             : &str = "int32";
pub const PARAM_INT64             : &str = "int64";
pub const PARAM_INT8              : &str = "int8";
pub const PARAM_KEY               : &str = "key";
pub const PARAM_KEY_ADDR          : &str = "keyAddr";
pub const PARAM_LHS               : &str = "lhs";
pub const PARAM_NAME              : &str = "name";
pub const PARAM_NAME_ADDR         : &str = "nameAddr";
pub const PARAM_NFT_ID            : &str = "nftID";
pub const PARAM_NFT_ID_BYTES      : &str = "nftIDBytes";
pub const PARAM_NFT_ID_STRING     : &str = "nftIDString";
pub const PARAM_PARAM             : &str = "this";
pub const PARAM_RECORD_INDEX      : &str = "recordIndex";
pub const PARAM_REQUEST_ID        : &str = "requestID";
pub const PARAM_REQUEST_ID_BYTES  : &str = "requestIDBytes";
pub const PARAM_REQUEST_ID_STRING : &str = "requestIDString";
pub const PARAM_RHS               : &str = "rhs";
pub const PARAM_SC_ADDRESS        : &str = "scAddress";
pub const PARAM_SC_AGENT_ID       : &str = "scAgentID";
pub const PARAM_SC_BIG_INT        : &str = "scBigInt";
pub const PARAM_SC_HASH           : &str = "scHash";
pub const PARAM_SC_HNAME          : &str = "scHname";
pub const PARAM_SC_NFT_ID         : &str = "scNftID";
pub const PARAM_SC_REQUEST_ID     : &str = "scRequestID";
pub const PARAM_SC_TOKEN_ID       : &str = "scTokenID";
pub const PARAM_SHIFT             : &str = "shift";
pub const PARAM_STRING            : &str = "string";
pub const PARAM_TOKEN_ID          : &str = "tokenID";
pub const PARAM_TOKEN_ID_BYTES    : &str = "tokenIDBytes";
pub const PARAM_TOKEN_ID_STRING   : &str = "tokenIDString";
pub const PARAM_UINT16            : &str = "uint16";
pub const PARAM_UINT32            : &str = "uint32";
pub const PARAM_UINT64            : &str = "uint64";
pub const PARAM_UINT8             : &str = "uint8";
pub const PARAM_VALUE             : &str = "value";
pub const PARAM_VALUE_ADDR        : &str = "valueAddr";

pub const RESULT_COUNT      : &str = "count";
pub const RESULT_IOTAS      : &str = "iotas";
pub const RESULT_LENGTH     : &str = "length";
pub const RESULT_QUO        : &str = "quo";
pub const RESULT_RANDOM     : &str = "random";
pub const RESULT_RECORD     : &str = "record";
pub const RESULT_REMAINDER  : &str = "remainder";
pub const RESULT_RES        : &str = "res";
pub const RESULT_VALUE      : &str = "value";
pub const RESULT_VALUE_ADDR : &str = "valueAddr";

pub const STATE_ADDRESS_MAP_OF_ADDRESS_ARRAY : &str = "addressMapOfAddressArray";
pub const STATE_ADDRESS_MAP_OF_ADDRESS_MAP   : &str = "addressMapOfAddressMap";
pub const STATE_ARRAY_OF_ADDRESS_ARRAY       : &str = "arrayOfAddressArray";
pub const STATE_ARRAY_OF_ADDRESS_MAP         : &str = "arrayOfAddressMap";
pub const STATE_ARRAY_OF_STRING_ARRAY        : &str = "arrayOfStringArray";
pub const STATE_ARRAY_OF_STRING_MAP          : &str = "arrayOfStringMap";
pub const STATE_LAT_LONG                     : &str = "latLong";
pub const STATE_RANDOM                       : &str = "random";
pub const STATE_STRING_MAP_OF_STRING_ARRAY   : &str = "stringMapOfStringArray";
pub const STATE_STRING_MAP_OF_STRING_MAP     : &str = "stringMapOfStringMap";

pub const FUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_APPEND : &str = "addressMapOfAddressArrayAppend";
pub const FUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_CLEAR  : &str = "addressMapOfAddressArrayClear";
pub const FUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_SET    : &str = "addressMapOfAddressArraySet";
pub const FUNC_ADDRESS_MAP_OF_ADDRESS_MAP_CLEAR    : &str = "addressMapOfAddressMapClear";
pub const FUNC_ADDRESS_MAP_OF_ADDRESS_MAP_SET      : &str = "addressMapOfAddressMapSet";
pub const FUNC_ARRAY_OF_ADDRESS_ARRAY_APPEND       : &str = "arrayOfAddressArrayAppend";
pub const FUNC_ARRAY_OF_ADDRESS_ARRAY_CLEAR        : &str = "arrayOfAddressArrayClear";
pub const FUNC_ARRAY_OF_ADDRESS_ARRAY_SET          : &str = "arrayOfAddressArraySet";
pub const FUNC_ARRAY_OF_ADDRESS_MAP_CLEAR          : &str = "arrayOfAddressMapClear";
pub const FUNC_ARRAY_OF_ADDRESS_MAP_SET            : &str = "arrayOfAddressMapSet";
pub const FUNC_ARRAY_OF_STRING_ARRAY_APPEND        : &str = "arrayOfStringArrayAppend";
pub const FUNC_ARRAY_OF_STRING_ARRAY_CLEAR         : &str = "arrayOfStringArrayClear";
pub const FUNC_ARRAY_OF_STRING_ARRAY_SET           : &str = "arrayOfStringArraySet";
pub const FUNC_ARRAY_OF_STRING_MAP_CLEAR           : &str = "arrayOfStringMapClear";
pub const FUNC_ARRAY_OF_STRING_MAP_SET             : &str = "arrayOfStringMapSet";
pub const FUNC_PARAM_TYPES                         : &str = "paramTypes";
pub const FUNC_RANDOM                              : &str = "random";
pub const FUNC_STRING_MAP_OF_STRING_ARRAY_APPEND   : &str = "stringMapOfStringArrayAppend";
pub const FUNC_STRING_MAP_OF_STRING_ARRAY_CLEAR    : &str = "stringMapOfStringArrayClear";
pub const FUNC_STRING_MAP_OF_STRING_ARRAY_SET      : &str = "stringMapOfStringArraySet";
pub const FUNC_STRING_MAP_OF_STRING_MAP_CLEAR      : &str = "stringMapOfStringMapClear";
pub const FUNC_STRING_MAP_OF_STRING_MAP_SET        : &str = "stringMapOfStringMapSet";
pub const FUNC_TAKE_ALLOWANCE                      : &str = "takeAllowance";
pub const FUNC_TAKE_BALANCE                        : &str = "takeBalance";
pub const FUNC_TRIGGER_EVENT                       : &str = "triggerEvent";
pub const VIEW_ADDRESS_MAP_OF_ADDRESS_ARRAY_LENGTH : &str = "addressMapOfAddressArrayLength";
pub const VIEW_ADDRESS_MAP_OF_ADDRESS_ARRAY_VALUE  : &str = "addressMapOfAddressArrayValue";
pub const VIEW_ADDRESS_MAP_OF_ADDRESS_MAP_VALUE    : &str = "addressMapOfAddressMapValue";
pub const VIEW_ARRAY_OF_ADDRESS_ARRAY_LENGTH       : &str = "arrayOfAddressArrayLength";
pub const VIEW_ARRAY_OF_ADDRESS_ARRAY_VALUE        : &str = "arrayOfAddressArrayValue";
pub const VIEW_ARRAY_OF_ADDRESS_MAP_VALUE          : &str = "arrayOfAddressMapValue";
pub const VIEW_ARRAY_OF_STRING_ARRAY_LENGTH        : &str = "arrayOfStringArrayLength";
pub const VIEW_ARRAY_OF_STRING_ARRAY_VALUE         : &str = "arrayOfStringArrayValue";
pub const VIEW_ARRAY_OF_STRING_MAP_VALUE           : &str = "arrayOfStringMapValue";
pub const VIEW_BIG_INT_ADD                         : &str = "bigIntAdd";
pub const VIEW_BIG_INT_DIV                         : &str = "bigIntDiv";
pub const VIEW_BIG_INT_DIV_MOD                     : &str = "bigIntDivMod";
pub const VIEW_BIG_INT_MOD                         : &str = "bigIntMod";
pub const VIEW_BIG_INT_MUL                         : &str = "bigIntMul";
pub const VIEW_BIG_INT_SHL                         : &str = "bigIntShl";
pub const VIEW_BIG_INT_SHR                         : &str = "bigIntShr";
pub const VIEW_BIG_INT_SUB                         : &str = "bigIntSub";
pub const VIEW_BLOCK_RECORD                        : &str = "blockRecord";
pub const VIEW_BLOCK_RECORDS                       : &str = "blockRecords";
pub const VIEW_CHECK_ADDRESS                       : &str = "checkAddress";
pub const VIEW_CHECK_AGENT_ID                      : &str = "checkAgentID";
pub const VIEW_CHECK_BIG_INT                       : &str = "checkBigInt";
pub const VIEW_CHECK_BOOL                          : &str = "checkBool";
pub const VIEW_CHECK_BYTES                         : &str = "checkBytes";
pub const VIEW_CHECK_ETH_ADDRESS_AND_AGENT_ID      : &str = "checkEthAddressAndAgentID";
pub const VIEW_CHECK_HASH                          : &str = "checkHash";
pub const VIEW_CHECK_HNAME                         : &str = "checkHname";
pub const VIEW_CHECK_INT_AND_UINT                  : &str = "checkIntAndUint";
pub const VIEW_CHECK_NFT_ID                        : &str = "checkNftID";
pub const VIEW_CHECK_REQUEST_ID                    : &str = "checkRequestID";
pub const VIEW_CHECK_STRING                        : &str = "checkString";
pub const VIEW_CHECK_TOKEN_ID                      : &str = "checkTokenID";
pub const VIEW_GET_RANDOM                          : &str = "getRandom";
pub const VIEW_IOTA_BALANCE                        : &str = "iotaBalance";
pub const VIEW_STRING_MAP_OF_STRING_ARRAY_LENGTH   : &str = "stringMapOfStringArrayLength";
pub const VIEW_STRING_MAP_OF_STRING_ARRAY_VALUE    : &str = "stringMapOfStringArrayValue";
pub const VIEW_STRING_MAP_OF_STRING_MAP_VALUE      : &str = "stringMapOfStringMapValue";

pub const HFUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_APPEND : ScHname = ScHname(0x328fea8f);
pub const HFUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_CLEAR  : ScHname = ScHname(0x771b8d2d);
pub const HFUNC_ADDRESS_MAP_OF_ADDRESS_ARRAY_SET    : ScHname = ScHname(0x9b51ab5e);
pub const HFUNC_ADDRESS_MAP_OF_ADDRESS_MAP_CLEAR    : ScHname = ScHname(0x2a5316b1);
pub const HFUNC_ADDRESS_MAP_OF_ADDRESS_MAP_SET      : ScHname = ScHname(0x7736a024);
pub const HFUNC_ARRAY_OF_ADDRESS_ARRAY_APPEND       : ScHname = ScHname(0xaf6e6b46);
pub const HFUNC_ARRAY_OF_ADDRESS_ARRAY_CLEAR        : ScHname = ScHname(0x8967252b);
pub const HFUNC_ARRAY_OF_ADDRESS_ARRAY_SET          : ScHname = ScHname(0xc84c8afa);
pub const HFUNC_ARRAY_OF_ADDRESS_MAP_CLEAR          : ScHname = ScHname(0x18720c38);
pub const HFUNC_ARRAY_OF_ADDRESS_MAP_SET            : ScHname = ScHname(0xd02edb28);
pub const HFUNC_ARRAY_OF_STRING_ARRAY_APPEND        : ScHname = ScHname(0x2f37355a);
pub const HFUNC_ARRAY_OF_STRING_ARRAY_CLEAR         : ScHname = ScHname(0xcec430af);
pub const HFUNC_ARRAY_OF_STRING_ARRAY_SET           : ScHname = ScHname(0xa74fa352);
pub const HFUNC_ARRAY_OF_STRING_MAP_CLEAR           : ScHname = ScHname(0x4ed3a6d7);
pub const HFUNC_ARRAY_OF_STRING_MAP_SET             : ScHname = ScHname(0xbe6a8ae7);
pub const HFUNC_PARAM_TYPES                         : ScHname = ScHname(0x6921c4cd);
pub const HFUNC_RANDOM                              : ScHname = ScHname(0xe86c97ca);
pub const HFUNC_STRING_MAP_OF_STRING_ARRAY_APPEND   : ScHname = ScHname(0x414f806d);
pub const HFUNC_STRING_MAP_OF_STRING_ARRAY_CLEAR    : ScHname = ScHname(0xe706a05f);
pub const HFUNC_STRING_MAP_OF_STRING_ARRAY_SET      : ScHname = ScHname(0x5acf713b);
pub const HFUNC_STRING_MAP_OF_STRING_MAP_CLEAR      : ScHname = ScHname(0xf8edb8cb);
pub const HFUNC_STRING_MAP_OF_STRING_MAP_SET        : ScHname = ScHname(0xa28e5cbb);
pub const HFUNC_TAKE_ALLOWANCE                      : ScHname = ScHname(0x91e7bd00);
pub const HFUNC_TAKE_BALANCE                        : ScHname = ScHname(0x8ad1cb27);
pub const HFUNC_TRIGGER_EVENT                       : ScHname = ScHname(0xd5438ac6);
pub const HVIEW_ADDRESS_MAP_OF_ADDRESS_ARRAY_LENGTH : ScHname = ScHname(0x30ecea55);
pub const HVIEW_ADDRESS_MAP_OF_ADDRESS_ARRAY_VALUE  : ScHname = ScHname(0x2775d926);
pub const HVIEW_ADDRESS_MAP_OF_ADDRESS_MAP_VALUE    : ScHname = ScHname(0x3e49b429);
pub const HVIEW_ARRAY_OF_ADDRESS_ARRAY_LENGTH       : ScHname = ScHname(0xc22488ab);
pub const HVIEW_ARRAY_OF_ADDRESS_ARRAY_VALUE        : ScHname = ScHname(0xb67ef99e);
pub const HVIEW_ARRAY_OF_ADDRESS_MAP_VALUE          : ScHname = ScHname(0xc9ae7aec);
pub const HVIEW_ARRAY_OF_STRING_ARRAY_LENGTH        : ScHname = ScHname(0x3eb0d035);
pub const HVIEW_ARRAY_OF_STRING_ARRAY_VALUE         : ScHname = ScHname(0xf2b0f6c8);
pub const HVIEW_ARRAY_OF_STRING_MAP_VALUE           : ScHname = ScHname(0x8b35543c);
pub const HVIEW_BIG_INT_ADD                         : ScHname = ScHname(0x2b2c5e52);
pub const HVIEW_BIG_INT_DIV                         : ScHname = ScHname(0x84b2dadd);
pub const HVIEW_BIG_INT_DIV_MOD                     : ScHname = ScHname(0x0bcaf323);
pub const HVIEW_BIG_INT_MOD                         : ScHname = ScHname(0x4bbefd01);
pub const HVIEW_BIG_INT_MUL                         : ScHname = ScHname(0x976cc699);
pub const HVIEW_BIG_INT_SHL                         : ScHname = ScHname(0x64677f67);
pub const HVIEW_BIG_INT_SHR                         : ScHname = ScHname(0xe5621518);
pub const HVIEW_BIG_INT_SUB                         : ScHname = ScHname(0xf3c8cd33);
pub const HVIEW_BLOCK_RECORD                        : ScHname = ScHname(0xad13b2f8);
pub const HVIEW_BLOCK_RECORDS                       : ScHname = ScHname(0x16e249ea);
pub const HVIEW_CHECK_ADDRESS                       : ScHname = ScHname(0x64b8add5);
pub const HVIEW_CHECK_AGENT_ID                      : ScHname = ScHname(0x27ae5137);
pub const HVIEW_CHECK_BIG_INT                       : ScHname = ScHname(0x3497622b);
pub const HVIEW_CHECK_BOOL                          : ScHname = ScHname(0xd8a476d2);
pub const HVIEW_CHECK_BYTES                         : ScHname = ScHname(0xcef76f43);
pub const HVIEW_CHECK_ETH_ADDRESS_AND_AGENT_ID      : ScHname = ScHname(0xe01ad77e);
pub const HVIEW_CHECK_HASH                          : ScHname = ScHname(0x6b391dec);
pub const HVIEW_CHECK_HNAME                         : ScHname = ScHname(0x7690daec);
pub const HVIEW_CHECK_INT_AND_UINT                  : ScHname = ScHname(0xfe928771);
pub const HVIEW_CHECK_NFT_ID                        : ScHname = ScHname(0xcf852738);
pub const HVIEW_CHECK_REQUEST_ID                    : ScHname = ScHname(0xeb1244dc);
pub const HVIEW_CHECK_STRING                        : ScHname = ScHname(0xb2c3fb27);
pub const HVIEW_CHECK_TOKEN_ID                      : ScHname = ScHname(0xeea106dc);
pub const HVIEW_GET_RANDOM                          : ScHname = ScHname(0x46263045);
pub const HVIEW_IOTA_BALANCE                        : ScHname = ScHname(0x9d3920bd);
pub const HVIEW_STRING_MAP_OF_STRING_ARRAY_LENGTH   : ScHname = ScHname(0x9f433699);
pub const HVIEW_STRING_MAP_OF_STRING_ARRAY_VALUE    : ScHname = ScHname(0xb263e298);
pub const HVIEW_STRING_MAP_OF_STRING_MAP_VALUE      : ScHname = ScHname(0xb93f2535);

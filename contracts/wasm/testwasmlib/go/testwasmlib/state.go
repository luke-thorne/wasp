// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type MapAddressToImmutableAddressArray struct {
	proxy wasmtypes.Proxy
}

func (m MapAddressToImmutableAddressArray) GetAddressArray(key wasmtypes.ScAddress) ImmutableAddressArray {
	return ImmutableAddressArray{proxy: m.proxy.Key(wasmtypes.AddressToBytes(key))}
}

type MapAddressToImmutableAddressMap struct {
	proxy wasmtypes.Proxy
}

func (m MapAddressToImmutableAddressMap) GetAddressMap(key wasmtypes.ScAddress) ImmutableAddressMap {
	return ImmutableAddressMap{proxy: m.proxy.Key(wasmtypes.AddressToBytes(key))}
}

type ArrayOfImmutableAddressArray struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableAddressArray) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableAddressArray) GetAddressArray(index uint32) ImmutableAddressArray {
	return ImmutableAddressArray{proxy: a.proxy.Index(index)}
}

type ArrayOfImmutableAddressMap struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableAddressMap) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableAddressMap) GetAddressMap(index uint32) ImmutableAddressMap {
	return ImmutableAddressMap{proxy: a.proxy.Index(index)}
}

type ArrayOfImmutableStringArray struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableStringArray) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableStringArray) GetStringArray(index uint32) ImmutableStringArray {
	return ImmutableStringArray{proxy: a.proxy.Index(index)}
}

type ArrayOfImmutableStringMap struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableStringMap) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableStringMap) GetStringMap(index uint32) ImmutableStringMap {
	return ImmutableStringMap{proxy: a.proxy.Index(index)}
}

type MapInt32ToImmutableLongitude struct {
	proxy wasmtypes.Proxy
}

func (m MapInt32ToImmutableLongitude) GetLongitude(key int32) ImmutableLongitude {
	return ImmutableLongitude{proxy: m.proxy.Key(wasmtypes.Int32ToBytes(key))}
}

type MapStringToImmutableStringArray struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToImmutableStringArray) GetStringArray(key string) ImmutableStringArray {
	return ImmutableStringArray{proxy: m.proxy.Key(wasmtypes.StringToBytes(key))}
}

type MapStringToImmutableStringMap struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToImmutableStringMap) GetStringMap(key string) ImmutableStringMap {
	return ImmutableStringMap{proxy: m.proxy.Key(wasmtypes.StringToBytes(key))}
}

type ImmutableTestWasmLibState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableTestWasmLibState) AddressMapOfAddressArray() MapAddressToImmutableAddressArray {
	return MapAddressToImmutableAddressArray{proxy: s.proxy.Root(StateAddressMapOfAddressArray)}
}

func (s ImmutableTestWasmLibState) AddressMapOfAddressMap() MapAddressToImmutableAddressMap {
	return MapAddressToImmutableAddressMap{proxy: s.proxy.Root(StateAddressMapOfAddressMap)}
}

// ISCP-specific datatypes, using Address
func (s ImmutableTestWasmLibState) ArrayOfAddressArray() ArrayOfImmutableAddressArray {
	return ArrayOfImmutableAddressArray{proxy: s.proxy.Root(StateArrayOfAddressArray)}
}

func (s ImmutableTestWasmLibState) ArrayOfAddressMap() ArrayOfImmutableAddressMap {
	return ArrayOfImmutableAddressMap{proxy: s.proxy.Root(StateArrayOfAddressMap)}
}

// basic datatypes, using String
func (s ImmutableTestWasmLibState) ArrayOfStringArray() ArrayOfImmutableStringArray {
	return ArrayOfImmutableStringArray{proxy: s.proxy.Root(StateArrayOfStringArray)}
}

func (s ImmutableTestWasmLibState) ArrayOfStringMap() ArrayOfImmutableStringMap {
	return ArrayOfImmutableStringMap{proxy: s.proxy.Root(StateArrayOfStringMap)}
}

func (s ImmutableTestWasmLibState) LatLong() MapInt32ToImmutableLongitude {
	return MapInt32ToImmutableLongitude{proxy: s.proxy.Root(StateLatLong)}
}

// Other
func (s ImmutableTestWasmLibState) Random() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(StateRandom))
}

func (s ImmutableTestWasmLibState) StringMapOfStringArray() MapStringToImmutableStringArray {
	return MapStringToImmutableStringArray{proxy: s.proxy.Root(StateStringMapOfStringArray)}
}

func (s ImmutableTestWasmLibState) StringMapOfStringMap() MapStringToImmutableStringMap {
	return MapStringToImmutableStringMap{proxy: s.proxy.Root(StateStringMapOfStringMap)}
}

type MapAddressToMutableAddressArray struct {
	proxy wasmtypes.Proxy
}

func (m MapAddressToMutableAddressArray) Clear() {
	m.proxy.ClearMap()
}

func (m MapAddressToMutableAddressArray) GetAddressArray(key wasmtypes.ScAddress) MutableAddressArray {
	return MutableAddressArray{proxy: m.proxy.Key(wasmtypes.AddressToBytes(key))}
}

type MapAddressToMutableAddressMap struct {
	proxy wasmtypes.Proxy
}

func (m MapAddressToMutableAddressMap) Clear() {
	m.proxy.ClearMap()
}

func (m MapAddressToMutableAddressMap) GetAddressMap(key wasmtypes.ScAddress) MutableAddressMap {
	return MutableAddressMap{proxy: m.proxy.Key(wasmtypes.AddressToBytes(key))}
}

type ArrayOfMutableAddressArray struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableAddressArray) AppendAddressArray() MutableAddressArray {
	return MutableAddressArray{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableAddressArray) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableAddressArray) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableAddressArray) GetAddressArray(index uint32) MutableAddressArray {
	return MutableAddressArray{proxy: a.proxy.Index(index)}
}

type ArrayOfMutableAddressMap struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableAddressMap) AppendAddressMap() MutableAddressMap {
	return MutableAddressMap{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableAddressMap) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableAddressMap) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableAddressMap) GetAddressMap(index uint32) MutableAddressMap {
	return MutableAddressMap{proxy: a.proxy.Index(index)}
}

type ArrayOfMutableStringArray struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableStringArray) AppendStringArray() MutableStringArray {
	return MutableStringArray{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableStringArray) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableStringArray) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableStringArray) GetStringArray(index uint32) MutableStringArray {
	return MutableStringArray{proxy: a.proxy.Index(index)}
}

type ArrayOfMutableStringMap struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableStringMap) AppendStringMap() MutableStringMap {
	return MutableStringMap{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableStringMap) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableStringMap) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableStringMap) GetStringMap(index uint32) MutableStringMap {
	return MutableStringMap{proxy: a.proxy.Index(index)}
}

type MapInt32ToMutableLongitude struct {
	proxy wasmtypes.Proxy
}

func (m MapInt32ToMutableLongitude) Clear() {
	m.proxy.ClearMap()
}

func (m MapInt32ToMutableLongitude) GetLongitude(key int32) MutableLongitude {
	return MutableLongitude{proxy: m.proxy.Key(wasmtypes.Int32ToBytes(key))}
}

type MapStringToMutableStringArray struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToMutableStringArray) Clear() {
	m.proxy.ClearMap()
}

func (m MapStringToMutableStringArray) GetStringArray(key string) MutableStringArray {
	return MutableStringArray{proxy: m.proxy.Key(wasmtypes.StringToBytes(key))}
}

type MapStringToMutableStringMap struct {
	proxy wasmtypes.Proxy
}

func (m MapStringToMutableStringMap) Clear() {
	m.proxy.ClearMap()
}

func (m MapStringToMutableStringMap) GetStringMap(key string) MutableStringMap {
	return MutableStringMap{proxy: m.proxy.Key(wasmtypes.StringToBytes(key))}
}

type MutableTestWasmLibState struct {
	proxy wasmtypes.Proxy
}

func (s MutableTestWasmLibState) AsImmutable() ImmutableTestWasmLibState {
	return ImmutableTestWasmLibState(s)
}

func (s MutableTestWasmLibState) AddressMapOfAddressArray() MapAddressToMutableAddressArray {
	return MapAddressToMutableAddressArray{proxy: s.proxy.Root(StateAddressMapOfAddressArray)}
}

func (s MutableTestWasmLibState) AddressMapOfAddressMap() MapAddressToMutableAddressMap {
	return MapAddressToMutableAddressMap{proxy: s.proxy.Root(StateAddressMapOfAddressMap)}
}

// ISCP-specific datatypes, using Address
func (s MutableTestWasmLibState) ArrayOfAddressArray() ArrayOfMutableAddressArray {
	return ArrayOfMutableAddressArray{proxy: s.proxy.Root(StateArrayOfAddressArray)}
}

func (s MutableTestWasmLibState) ArrayOfAddressMap() ArrayOfMutableAddressMap {
	return ArrayOfMutableAddressMap{proxy: s.proxy.Root(StateArrayOfAddressMap)}
}

// basic datatypes, using String
func (s MutableTestWasmLibState) ArrayOfStringArray() ArrayOfMutableStringArray {
	return ArrayOfMutableStringArray{proxy: s.proxy.Root(StateArrayOfStringArray)}
}

func (s MutableTestWasmLibState) ArrayOfStringMap() ArrayOfMutableStringMap {
	return ArrayOfMutableStringMap{proxy: s.proxy.Root(StateArrayOfStringMap)}
}

func (s MutableTestWasmLibState) LatLong() MapInt32ToMutableLongitude {
	return MapInt32ToMutableLongitude{proxy: s.proxy.Root(StateLatLong)}
}

// Other
func (s MutableTestWasmLibState) Random() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(StateRandom))
}

func (s MutableTestWasmLibState) StringMapOfStringArray() MapStringToMutableStringArray {
	return MapStringToMutableStringArray{proxy: s.proxy.Root(StateStringMapOfStringArray)}
}

func (s MutableTestWasmLibState) StringMapOfStringMap() MapStringToMutableStringMap {
	return MapStringToMutableStringMap{proxy: s.proxy.Root(StateStringMapOfStringMap)}
}

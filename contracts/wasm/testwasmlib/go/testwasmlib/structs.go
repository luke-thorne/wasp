// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package testwasmlib

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type Location struct {
	X int32
	Y int32
}

func NewLocationFromBytes(buf []byte) *Location {
	dec := wasmtypes.NewWasmDecoder(buf)
	data := &Location{}
	data.X = wasmtypes.Int32Decode(dec)
	data.Y = wasmtypes.Int32Decode(dec)
	dec.Close()
	return data
}

func (o *Location) Bytes() []byte {
	enc := wasmtypes.NewWasmEncoder()
	wasmtypes.Int32Encode(enc, o.X)
	wasmtypes.Int32Encode(enc, o.Y)
	return enc.Buf()
}

type ImmutableLocation struct {
	proxy wasmtypes.Proxy
}

func (o ImmutableLocation) Exists() bool {
	return o.proxy.Exists()
}

func (o ImmutableLocation) Value() *Location {
	return NewLocationFromBytes(o.proxy.Get())
}

type MutableLocation struct {
	proxy wasmtypes.Proxy
}

func (o MutableLocation) Delete() {
	o.proxy.Delete()
}

func (o MutableLocation) Exists() bool {
	return o.proxy.Exists()
}

func (o MutableLocation) SetValue(value *Location) {
	o.proxy.Set(value.Bytes())
}

func (o MutableLocation) Value() *Location {
	return NewLocationFromBytes(o.proxy.Get())
}

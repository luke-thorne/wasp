// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairroulette

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableLastWinningNumberResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableLastWinningNumberResults) LastWinningNumber() wasmtypes.ScImmutableUint16 {
	return wasmtypes.NewScImmutableUint16(s.proxy.Root(ResultLastWinningNumber))
}

type MutableLastWinningNumberResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableLastWinningNumberResults) LastWinningNumber() wasmtypes.ScMutableUint16 {
	return wasmtypes.NewScMutableUint16(s.proxy.Root(ResultLastWinningNumber))
}

type ImmutableRoundNumberResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableRoundNumberResults) RoundNumber() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultRoundNumber))
}

type MutableRoundNumberResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableRoundNumberResults) RoundNumber() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultRoundNumber))
}

type ImmutableRoundStartedAtResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableRoundStartedAtResults) RoundStartedAt() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultRoundStartedAt))
}

type MutableRoundStartedAtResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableRoundStartedAtResults) RoundStartedAt() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultRoundStartedAt))
}

type ImmutableRoundStatusResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableRoundStatusResults) RoundStatus() wasmtypes.ScImmutableUint16 {
	return wasmtypes.NewScImmutableUint16(s.proxy.Root(ResultRoundStatus))
}

type MutableRoundStatusResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableRoundStatusResults) RoundStatus() wasmtypes.ScMutableUint16 {
	return wasmtypes.NewScMutableUint16(s.proxy.Root(ResultRoundStatus))
}

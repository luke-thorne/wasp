// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairroulette

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type Bet struct {
	Amount uint64
	Better wasmtypes.ScAgentID
	Number uint16
}

func NewBetFromBytes(buf []byte) *Bet {
	dec := wasmtypes.NewWasmDecoder(buf)
	data := &Bet{}
	data.Amount = wasmtypes.Uint64Decode(dec)
	data.Better = wasmtypes.AgentIDDecode(dec)
	data.Number = wasmtypes.Uint16Decode(dec)
	dec.Close()
	return data
}

func (o *Bet) Bytes() []byte {
	enc := wasmtypes.NewWasmEncoder()
	wasmtypes.Uint64Encode(enc, o.Amount)
	wasmtypes.AgentIDEncode(enc, o.Better)
	wasmtypes.Uint16Encode(enc, o.Number)
	return enc.Buf()
}

type ImmutableBet struct {
	proxy wasmtypes.Proxy
}

func (o ImmutableBet) Exists() bool {
	return o.proxy.Exists()
}

func (o ImmutableBet) Value() *Bet {
	return NewBetFromBytes(o.proxy.Get())
}

type MutableBet struct {
	proxy wasmtypes.Proxy
}

func (o MutableBet) Delete() {
	o.proxy.Delete()
}

func (o MutableBet) Exists() bool {
	return o.proxy.Exists()
}

func (o MutableBet) SetValue(value *Bet) {
	o.proxy.Set(value.Bytes())
}

func (o MutableBet) Value() *Bet {
	return NewBetFromBytes(o.proxy.Get())
}

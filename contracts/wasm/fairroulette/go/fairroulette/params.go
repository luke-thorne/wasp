// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:revive
package fairroulette

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableInitParams) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ParamOwner))
}

type MutableInitParams struct {
	proxy wasmtypes.Proxy
}

func (s MutableInitParams) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ParamOwner))
}

type ImmutablePlaceBetParams struct {
	proxy wasmtypes.Proxy
}

// the number a better bets on
func (s ImmutablePlaceBetParams) Number() wasmtypes.ScImmutableUint16 {
	return wasmtypes.NewScImmutableUint16(s.proxy.Root(ParamNumber))
}

type MutablePlaceBetParams struct {
	proxy wasmtypes.Proxy
}

// the number a better bets on
func (s MutablePlaceBetParams) Number() wasmtypes.ScMutableUint16 {
	return wasmtypes.NewScMutableUint16(s.proxy.Root(ParamNumber))
}

type ImmutablePlayPeriodParams struct {
	proxy wasmtypes.Proxy
}

// number of minutes in one playing round
func (s ImmutablePlayPeriodParams) PlayPeriod() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ParamPlayPeriod))
}

type MutablePlayPeriodParams struct {
	proxy wasmtypes.Proxy
}

// number of minutes in one playing round
func (s MutablePlayPeriodParams) PlayPeriod() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ParamPlayPeriod))
}

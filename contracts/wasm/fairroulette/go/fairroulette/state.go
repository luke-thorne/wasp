// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package fairroulette

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableBet struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableBet) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableBet) GetBet(index uint32) ImmutableBet {
	return ImmutableBet{proxy: a.proxy.Index(index)}
}

type ImmutableFairRouletteState struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableFairRouletteState) Bets() ArrayOfImmutableBet {
	return ArrayOfImmutableBet{proxy: s.proxy.Root(StateBets)}
}

func (s ImmutableFairRouletteState) LastWinningNumber() wasmtypes.ScImmutableUint16 {
	return wasmtypes.NewScImmutableUint16(s.proxy.Root(StateLastWinningNumber))
}

func (s ImmutableFairRouletteState) PlayPeriod() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(StatePlayPeriod))
}

func (s ImmutableFairRouletteState) RoundNumber() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(StateRoundNumber))
}

func (s ImmutableFairRouletteState) RoundStartedAt() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(StateRoundStartedAt))
}

func (s ImmutableFairRouletteState) RoundStatus() wasmtypes.ScImmutableUint16 {
	return wasmtypes.NewScImmutableUint16(s.proxy.Root(StateRoundStatus))
}

type ArrayOfMutableBet struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableBet) AppendBet() MutableBet {
	return MutableBet{proxy: a.proxy.Append()}
}

func (a ArrayOfMutableBet) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableBet) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableBet) GetBet(index uint32) MutableBet {
	return MutableBet{proxy: a.proxy.Index(index)}
}

type MutableFairRouletteState struct {
	proxy wasmtypes.Proxy
}

func (s MutableFairRouletteState) AsImmutable() ImmutableFairRouletteState {
	return ImmutableFairRouletteState(s)
}

func (s MutableFairRouletteState) Bets() ArrayOfMutableBet {
	return ArrayOfMutableBet{proxy: s.proxy.Root(StateBets)}
}

func (s MutableFairRouletteState) LastWinningNumber() wasmtypes.ScMutableUint16 {
	return wasmtypes.NewScMutableUint16(s.proxy.Root(StateLastWinningNumber))
}

func (s MutableFairRouletteState) PlayPeriod() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(StatePlayPeriod))
}

func (s MutableFairRouletteState) RoundNumber() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(StateRoundNumber))
}

func (s MutableFairRouletteState) RoundStartedAt() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(StateRoundStartedAt))
}

func (s MutableFairRouletteState) RoundStatus() wasmtypes.ScMutableUint16 {
	return wasmtypes.NewScMutableUint16(s.proxy.Root(StateRoundStatus))
}

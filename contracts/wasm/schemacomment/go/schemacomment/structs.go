// COPYRIGHT OF A TEST SCHEMA DEFINITION 1
// COPYRIGHT OF A TEST SCHEMA DEFINITION 2

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package schemacomment

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

// comment for TestStruct1
type TestStruct1 struct {
	// comment for x1
	X1 int32
	// comment for y1
	Y1 int32
}

func NewTestStruct1FromBytes(buf []byte) *TestStruct1 {
	dec := wasmtypes.NewWasmDecoder(buf)
	data := &TestStruct1{}
	data.X1 = wasmtypes.Int32Decode(dec)
	data.Y1 = wasmtypes.Int32Decode(dec)
	dec.Close()
	return data
}

func (o *TestStruct1) Bytes() []byte {
	enc := wasmtypes.NewWasmEncoder()
	wasmtypes.Int32Encode(enc, o.X1)
	wasmtypes.Int32Encode(enc, o.Y1)
	return enc.Buf()
}

type ImmutableTestStruct1 struct {
	proxy wasmtypes.Proxy
}

func (o ImmutableTestStruct1) Exists() bool {
	return o.proxy.Exists()
}

func (o ImmutableTestStruct1) Value() *TestStruct1 {
	return NewTestStruct1FromBytes(o.proxy.Get())
}

type MutableTestStruct1 struct {
	proxy wasmtypes.Proxy
}

func (o MutableTestStruct1) Delete() {
	o.proxy.Delete()
}

func (o MutableTestStruct1) Exists() bool {
	return o.proxy.Exists()
}

func (o MutableTestStruct1) SetValue(value *TestStruct1) {
	o.proxy.Set(value.Bytes())
}

func (o MutableTestStruct1) Value() *TestStruct1 {
	return NewTestStruct1FromBytes(o.proxy.Get())
}

// comment for TestStruct2
type TestStruct2 struct {
	// comment for x2
	X2 int32
	// comment for y2
	Y2 int32
}

func NewTestStruct2FromBytes(buf []byte) *TestStruct2 {
	dec := wasmtypes.NewWasmDecoder(buf)
	data := &TestStruct2{}
	data.X2 = wasmtypes.Int32Decode(dec)
	data.Y2 = wasmtypes.Int32Decode(dec)
	dec.Close()
	return data
}

func (o *TestStruct2) Bytes() []byte {
	enc := wasmtypes.NewWasmEncoder()
	wasmtypes.Int32Encode(enc, o.X2)
	wasmtypes.Int32Encode(enc, o.Y2)
	return enc.Buf()
}

type ImmutableTestStruct2 struct {
	proxy wasmtypes.Proxy
}

func (o ImmutableTestStruct2) Exists() bool {
	return o.proxy.Exists()
}

func (o ImmutableTestStruct2) Value() *TestStruct2 {
	return NewTestStruct2FromBytes(o.proxy.Get())
}

type MutableTestStruct2 struct {
	proxy wasmtypes.Proxy
}

func (o MutableTestStruct2) Delete() {
	o.proxy.Delete()
}

func (o MutableTestStruct2) Exists() bool {
	return o.proxy.Exists()
}

func (o MutableTestStruct2) SetValue(value *TestStruct2) {
	o.proxy.Set(value.Bytes())
}

func (o MutableTestStruct2) Value() *TestStruct2 {
	return NewTestStruct2FromBytes(o.proxy.Get())
}

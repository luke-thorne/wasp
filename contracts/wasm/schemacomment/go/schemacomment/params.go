// COPYRIGHT OF A TEST SCHEMA DEFINITION 1
// COPYRIGHT OF A TEST SCHEMA DEFINITION 2

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package schemacomment

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableInt64) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableInt64) GetInt64(index uint32) wasmtypes.ScImmutableInt64 {
	return wasmtypes.NewScImmutableInt64(a.proxy.Index(index))
}

type ImmutableTestFunc1Params struct {
	proxy wasmtypes.Proxy
}

// comment for arr
func (s ImmutableTestFunc1Params) Arr() ArrayOfImmutableInt64 {
	return ArrayOfImmutableInt64{proxy: s.proxy.Root(ParamArr)}
}

// comment for name
func (s ImmutableTestFunc1Params) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamName))
}

// comment for value
func (s ImmutableTestFunc1Params) Value() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamValue))
}

type ArrayOfMutableInt64 struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableInt64) AppendInt64() wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(a.proxy.Append())
}

func (a ArrayOfMutableInt64) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableInt64) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableInt64) GetInt64(index uint32) wasmtypes.ScMutableInt64 {
	return wasmtypes.NewScMutableInt64(a.proxy.Index(index))
}

type MutableTestFunc1Params struct {
	proxy wasmtypes.Proxy
}

// comment for arr
func (s MutableTestFunc1Params) Arr() ArrayOfMutableInt64 {
	return ArrayOfMutableInt64{proxy: s.proxy.Root(ParamArr)}
}

// comment for name
func (s MutableTestFunc1Params) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamName))
}

// comment for value
func (s MutableTestFunc1Params) Value() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamValue))
}

type ImmutableTestView1Params struct {
	proxy wasmtypes.Proxy
}

// comment for arr
func (s ImmutableTestView1Params) Arr() ArrayOfImmutableInt64 {
	return ArrayOfImmutableInt64{proxy: s.proxy.Root(ParamArr)}
}

// comment for name
func (s ImmutableTestView1Params) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ParamName))
}

type MutableTestView1Params struct {
	proxy wasmtypes.Proxy
}

// comment for arr
func (s MutableTestView1Params) Arr() ArrayOfMutableInt64 {
	return ArrayOfMutableInt64{proxy: s.proxy.Root(ParamArr)}
}

// comment for name
func (s MutableTestView1Params) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ParamName))
}

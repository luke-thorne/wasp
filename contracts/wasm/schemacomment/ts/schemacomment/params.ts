// COPYRIGHT OF A TEST SCHEMA DEFINITION 1
// COPYRIGHT OF A TEST SCHEMA DEFINITION 2

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmtypes from "wasmlib/wasmtypes";
import * as sc from "./index";

export class ArrayOfImmutableInt64 extends wasmtypes.ScProxy {

	length(): u32 {
		return this.proxy.length();
	}

	getInt64(index: u32): wasmtypes.ScImmutableInt64 {
		return new wasmtypes.ScImmutableInt64(this.proxy.index(index));
	}
}

export class ImmutableTestFunc1Params extends wasmtypes.ScProxy {
	// comment for arr
	arr(): sc.ArrayOfImmutableInt64 {
		return new sc.ArrayOfImmutableInt64(this.proxy.root(sc.ParamArr));
	}

	// comment for name
	name(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamName));
	}

	// comment for value
	value(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamValue));
	}
}

export class ArrayOfMutableInt64 extends wasmtypes.ScProxy {

	appendInt64(): wasmtypes.ScMutableInt64 {
		return new wasmtypes.ScMutableInt64(this.proxy.append());
	}

	clear(): void {
		this.proxy.clearArray();
	}

	length(): u32 {
		return this.proxy.length();
	}

	getInt64(index: u32): wasmtypes.ScMutableInt64 {
		return new wasmtypes.ScMutableInt64(this.proxy.index(index));
	}
}

export class MutableTestFunc1Params extends wasmtypes.ScProxy {
	// comment for arr
	arr(): sc.ArrayOfMutableInt64 {
		return new sc.ArrayOfMutableInt64(this.proxy.root(sc.ParamArr));
	}

	// comment for name
	name(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamName));
	}

	// comment for value
	value(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamValue));
	}
}

export class ImmutableTestView1Params extends wasmtypes.ScProxy {
	// comment for arr
	arr(): sc.ArrayOfImmutableInt64 {
		return new sc.ArrayOfImmutableInt64(this.proxy.root(sc.ParamArr));
	}

	// comment for name
	name(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamName));
	}
}

export class MutableTestView1Params extends wasmtypes.ScProxy {
	// comment for arr
	arr(): sc.ArrayOfMutableInt64 {
		return new sc.ArrayOfMutableInt64(this.proxy.root(sc.ParamArr));
	}

	// comment for name
	name(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamName));
	}
}

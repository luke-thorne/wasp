// COPYRIGHT OF A TEST SCHEMA DEFINITION 1
// COPYRIGHT OF A TEST SCHEMA DEFINITION 2

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;
use crate::*;

#[derive(Clone)]
pub struct ImmutableTestFunc1Results {
	pub(crate) proxy: Proxy,
}

impl ImmutableTestFunc1Results {
    // comment for length
    pub fn length(&self) -> ScImmutableUint32 {
		ScImmutableUint32::new(self.proxy.root(RESULT_LENGTH))
	}
}

#[derive(Clone)]
pub struct MutableTestFunc1Results {
	pub(crate) proxy: Proxy,
}

impl MutableTestFunc1Results {
    // comment for length
    pub fn length(&self) -> ScMutableUint32 {
		ScMutableUint32::new(self.proxy.root(RESULT_LENGTH))
	}
}

#[derive(Clone)]
pub struct ImmutableTestView1Results {
	pub(crate) proxy: Proxy,
}

impl ImmutableTestView1Results {
    // comment for length
    pub fn length(&self) -> ScImmutableUint32 {
		ScImmutableUint32::new(self.proxy.root(RESULT_LENGTH))
	}
}

#[derive(Clone)]
pub struct MutableTestView1Results {
	pub(crate) proxy: Proxy,
}

impl MutableTestView1Results {
    // comment for length
    pub fn length(&self) -> ScMutableUint32 {
		ScMutableUint32::new(self.proxy.root(RESULT_LENGTH))
	}
}

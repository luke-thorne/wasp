// COPYRIGHT OF A TEST SCHEMA DEFINITION 1
// COPYRIGHT OF A TEST SCHEMA DEFINITION 2

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

#![allow(dead_code)]
#![allow(unused_imports)]

use wasmlib::*;

use crate::*;

#[derive(Clone)]
pub struct ImmutableSchemaCommentState {
	pub(crate) proxy: Proxy,
}

impl ImmutableSchemaCommentState {
    // comment for TestState1
    pub fn test_state1(&self) -> ArrayOfImmutableInt64 {
		ArrayOfImmutableInt64 { proxy: self.proxy.root(STATE_TEST_STATE1) }
	}

    // comment for TestState2
    pub fn test_state2(&self) -> ScImmutableAgentID {
		ScImmutableAgentID::new(self.proxy.root(STATE_TEST_STATE2))
	}
}

#[derive(Clone)]
pub struct MutableSchemaCommentState {
	pub(crate) proxy: Proxy,
}

impl MutableSchemaCommentState {
    pub fn as_immutable(&self) -> ImmutableSchemaCommentState {
		ImmutableSchemaCommentState { proxy: self.proxy.root("") }
	}

    // comment for TestState1
    pub fn test_state1(&self) -> ArrayOfMutableInt64 {
		ArrayOfMutableInt64 { proxy: self.proxy.root(STATE_TEST_STATE1) }
	}

    // comment for TestState2
    pub fn test_state2(&self) -> ScMutableAgentID {
		ScMutableAgentID::new(self.proxy.root(STATE_TEST_STATE2))
	}
}

// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

//nolint:revive
package fairauction

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableGetAuctionInfoResults struct {
	proxy wasmtypes.Proxy
}

// nr of bidders
func (s ImmutableGetAuctionInfoResults) Bidders() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultBidders))
}

// issuer of start_auction transaction
func (s ImmutableGetAuctionInfoResults) Creator() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultCreator))
}

// deposit by auction owner to cover the SC fees
func (s ImmutableGetAuctionInfoResults) Deposit() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultDeposit))
}

// auction description
func (s ImmutableGetAuctionInfoResults) Description() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultDescription))
}

// auction duration in minutes
func (s ImmutableGetAuctionInfoResults) Duration() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultDuration))
}

// the current highest bid amount
func (s ImmutableGetAuctionInfoResults) HighestBid() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultHighestBid))
}

// the current highest bidder
func (s ImmutableGetAuctionInfoResults) HighestBidder() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultHighestBidder))
}

// minimum bid amount
func (s ImmutableGetAuctionInfoResults) MinimumBid() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultMinimumBid))
}

// NFT of NFTs for sale
func (s ImmutableGetAuctionInfoResults) Nft() wasmtypes.ScImmutableNftID {
	return wasmtypes.NewScImmutableNftID(s.proxy.Root(ResultNft))
}

// auction owner's margin in promilles
func (s ImmutableGetAuctionInfoResults) OwnerMargin() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultOwnerMargin))
}

// timestamp when auction started
func (s ImmutableGetAuctionInfoResults) WhenStarted() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultWhenStarted))
}

type MutableGetAuctionInfoResults struct {
	proxy wasmtypes.Proxy
}

// nr of bidders
func (s MutableGetAuctionInfoResults) Bidders() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultBidders))
}

// issuer of start_auction transaction
func (s MutableGetAuctionInfoResults) Creator() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultCreator))
}

// deposit by auction owner to cover the SC fees
func (s MutableGetAuctionInfoResults) Deposit() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultDeposit))
}

// auction description
func (s MutableGetAuctionInfoResults) Description() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultDescription))
}

// auction duration in minutes
func (s MutableGetAuctionInfoResults) Duration() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultDuration))
}

// the current highest bid amount
func (s MutableGetAuctionInfoResults) HighestBid() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultHighestBid))
}

// the current highest bidder
func (s MutableGetAuctionInfoResults) HighestBidder() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultHighestBidder))
}

// minimum bid amount
func (s MutableGetAuctionInfoResults) MinimumBid() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultMinimumBid))
}

// NFT of NFTs for sale
func (s MutableGetAuctionInfoResults) Nft() wasmtypes.ScMutableNftID {
	return wasmtypes.NewScMutableNftID(s.proxy.Root(ResultNft))
}

// auction owner's margin in promilles
func (s MutableGetAuctionInfoResults) OwnerMargin() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultOwnerMargin))
}

// timestamp when auction started
func (s MutableGetAuctionInfoResults) WhenStarted() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultWhenStarted))
}
